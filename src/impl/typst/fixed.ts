import { Fixed } from "../../cli.ts";

const stableFixed: Fixed = {
  "N": "NN",
  "Z": "ZZ",
  "Q": "QQ",
  "R": "RR",
  "C": "CC",
  "CC": "CC",
  "A": "AA",
  "F": "FF",
  "SS": "SS",
  "natnums": "NN",
  "reals": "RR",
  "Reals": "RR",
  "cnums": "CC",
  "Complex": "CC",
  "degree": "degree",
  "varGamma": "Gamma",
  "varDelta": "Delta",
  "varTheta": "Theta",
  "varLambda": "Lambda",
  "varXi": "Xi",
  "varPi": "pi.alt",
  "varSigma": "Sigma",
  "varUpsilon": "Upsilon",
  "varPhi": "Phi",
  "varPsi": "Psi",
  "varOmega": "Omega",
  "varepsilon": "epsilon",
  "varkappa": "kappa.alt",
  "vartheta": "theta.alt",
  "thetasym": "theta.alt",
  "varpi": "pi.alt",
  "varrho": "rho.alt",
  "varsigma": "sigma.alt",
  "varphi": "phi",
  "cdot": "dot.op",
  "cdotp": "dot.op",
  "dots": "dots.h",
  "cdots": "dots.h.c",
  "ldots": "dots.h",
  "ddots": "dots.down",
  "vdots": "dots.v",
  "prime": "prime",
  "Box": "square.stroked",
  "S": "section",
  "sect": "section",
  "|": "parallel",
  "lang": "angle.l",
  "rang": "angle.r",
  "vert": "divides",
  "Vert": "parallel",
  "lVert": "parallel",
  "rVert": "parallel",
  "lceil": "ceil.l",
  "rceil": "ceil.r",
  "lfloor": "floor.l",
  "rfloor": "floor.r",
  "bigotimes": "times.circle.big",
  "bigvee": "or.big",
  "bigoplus": "xor.big",
  "bigwedge": "and.big",
  "bigodot": "dot.circle.big",
  "bigcap": "sect.big",
  "biguplus": "union.plus.big",
  "bigcup": "union.big",
  "bigsqcup": "union.sq.big",
  "wedge": "and",
  "curlywedge": "and.curly",
  "vee": "or",
  "curlyvee": "or.curly",
  "sqcap": "sect.sq",
  "sqcup": "union.sq",
  "boxdot": "dot.square",
  "boxplus": "plus.square",
  "boxminus": "minus.square",
  "boxtimes": "times.square",
  "oplus": "xor",
  "ominus": "minus.circle",
  "otimes": "times.circle",
  "uplus": "union.plus",
  "divideontimes": "times.div",
  "lhd": "lt.tri",
  "unlhd": "lt.tri.eq",
  "rhd": "gt.tri",
  "unrhd": "gt.tri.eq",
  "setminus": "without",
  "smallsetminus": "without",
  "forall": "forall",
  "complement": "complement",
  "partial": "partial",
  "exist": "exists",
  "exists": "exists",
  "noexist": "exists.not",
  "empty": "nothing",
  "emptyset": "nothing",
  "varnothing": "diameter",
  "nabla": "nabla",
  "ni": "in.rev",
  "blacksquare": "qed",
  "prod": "product",
  "coprod": "product.co",
  "sum": "sum",
  "plus": "plus",
  "minus": "minus",
  "mp": "minus.plus",
  "dotplus": "plus.dot",
  "backslash": "without",
  "ast": "convolve",
  "circ": "compose",
  "bullet": "circle.filled.small",
  "infty": "oo",
  "infin": "oo",
  "mid": "divides",
  "nmid": "divides.not",
  "parallel": "parallel",
  "nparallel": "parallel.not",
  "land": "and",
  "lor": "or",
  "cap": "sect",
  "cup": "union",
  "int": "integral",
  "iint": "integral.double",
  "iiint": "integral.triple",
  "iiiint": "integral.quad",
  "oint": "integral.cont",
  "oiint": "integral.surf",
  "oiiint": "integral.vol",
  "intclockwise": "integral.cw",
  "lcirclerightint": "integral.cont.cw",
  "rcirclerightint": "integral.cont.ccw",
  "nsimeq": "tilde.eq.not",
  "congneq": "tilde.nequiv",
  "eq": "eq",
  "ne": "eq.not",
  "neq": "eq.not",
  "triangleq": "eq.delta",
  "lessapprox": "lt.approx",
  "lesseqgtr": "lt.eq.gt",
  "sqsubset": "subset.sq",
  "eqcolon": "dash.colon",
  "minuscolon": "dash.colon",
  "sqsubseteq": "subset.eq.sq",
  "lessgtr": "lt.gt",
  "sqsupset": "supset.sq",
  "approx": "approx",
  "eqqcolon": "eq.colon",
  "equalscolon": "eq.colon",
  "lesssim": "lt.tilde",
  "sqsupseteq": "supset.eq.sq",
  "ll": "lt.double",
  "Subset": "subset.double",
  "eqsim": "minus.tilde",
  "lll": "lt.triple",
  "subset": "subset",
  "sub": "subset",
  "approxeq": "approx.eq",
  "llless": "lt.triple",
  "subseteq": "subset.eq",
  "sube": "subset.eq",
  "lt": "lt",
  "backepsilon": "in.rev.small",
  "equiv": "equiv",
  "succ": "succ",
  "backsim": "tilde.rev",
  "models": "tack.r.double",
  "succapprox": "succ.approx",
  "backsimeq": "tilde.eq.rev",
  "multimap": "multimap",
  "succcurlyeq": "succ.curly.eq",
  "ge": "gt.eq",
  "origof": "original",
  "succeq": "succ.eq",
  "geq": "gt.eq",
  "owns": "in.rev",
  "succsim": "succ.tilde",
  "geqq": "gt.equiv",
  "Supset": "supset.double",
  "geqslant": "gt.eq.slant",
  "perp": "tack.t",
  "supset": "supset",
  "gg": "gt.double",
  "supseteq": "supset.eq",
  "supe": "supset.eq",
  "ggg": "gt.triple",
  "prec": "prec",
  "gggtr": "gt.triple",
  "precapprox": "prec.approx",
  "thickapprox": "approx",
  "gt": "gt",
  "preccurlyeq": "prec.curly.eq",
  "thicksim": "tilde.op",
  "gtrapprox": "gt.approx",
  "preceq": "prec.eq",
  "trianglelefteq": "lt.tri.eq",
  "coloneqq": "colon.eq",
  "colonequals": "colon.eq",
  "gtreqless": "gt.eq.lt",
  "precsim": "prec.tilde",
  "propto": "prop",
  "trianglerighteq": "gt.tri.eq",
  "gtrless": "gt.lt",
  "varpropto": "prop",
  "gtrsim": "gt.tilde",
  "shortmid": "divides",
  "vartriangle": "triangle.stroked.t",
  "cong": "tilde.equiv",
  "imageof": "image",
  "shortparallel": "parallel",
  "vartriangleleft": "lt.tri",
  "curlyeqprec": "eq.prec",
  "in": "in",
  "isin": "in",
  "sim": "tilde.op",
  "vartriangleright": "gt.tri",
  "curlyeqsucc": "eq.succ",
  "vcentcolon": "colon",
  "ratio": "colon",
  "dashv": "tack.l",
  "le": "lt.eq",
  "vdash": "tack.r",
  "dblcolon": "colon.double",
  "coloncolon": "colon.double",
  "leq": "lt.eq",
  "simeq": "tilde.eq",
  "vDash": "tack.r.double",
  "leqq": "lt.equiv",
  "Vdash": "forces",
  "leqslant": "lt.eq.slant",
  "gnapprox": "gt.napprox",
  "ngeqslant": "gt.eq.not",
  "nsubseteq": "subset.eq.not",
  "precneqq": "prec.nequiv",
  "gneq": "gt.neq",
  "ngtr": "gt.not",
  "nsubseteqq": "subset.eq.not",
  "precnsim": "prec.ntilde",
  "gneqq": "gt.nequiv",
  "nleq": "lt.eq.not",
  "nsucc": "succ.not",
  "subsetneq": "subset.neq",
  "gnsim": "gt.ntilde",
  "nleqq": "lt.eq.not",
  "nsucceq": "succ.curly.eq.not",
  "gvertneqq": "gt.nequiv",
  "nleqslant": "lt.eq.not",
  "nsupseteq": "supset.eq.not",
  "succnapprox": "succ.napprox",
  "lnapprox": "lt.napprox",
  "nless": "lt.not",
  "nsupseteqq": "supset.eq.not",
  "succneqq": "succ.nequiv",
  "lneq": "lt.neq",
  "ntriangleleft": "lt.tri.not",
  "succnsim": "succ.ntilde",
  "lneqq": "lt.nequiv",
  "notin": "in.not",
  "neg": "not",
  "lnot": "not",
  "ntrianglelefteq": "lt.tri.eq.not",
  "supsetneq": "supset.neq",
  "lnsim": "lt.ntilde",
  "notni": "in.rev.not",
  "ntriangleright": "gt.tri.not",
  "lvertneqq": "lt.nequiv",
  "ntrianglerighteq": "gt.tri.eq.not",
  "varsubsetneq": "subset.neq",
  "ncong": "tilde.nequiv",
  "nprec": "prec.not",
  "nvdash": "tack.r.not",
  "npreceq": "prec.curly.eq.not",
  "nvDash": "tack.r.double.not",
  "varsupsetneq": "supset.neq",
  "nshortmid": "divides.not",
  "ngeq": "gt.eq.not",
  "nshortparallel": "parallel.not",
  "nVdash": "forces.not",
  "ngeqq": "gt.eq.not",
  "nsim": "tilde.not",
  "precnapprox": "prec.napprox",
  "circlearrowleft": "arrow.ccw",
  "leftharpoonup": "harpoon.lt",
  "rArr": "arrow.r.double",
  "circlearrowright": "arrow.cw",
  "leftleftarrows": "arrows.ll",
  "rarr": "arrow.r",
  "curvearrowleft": "arrow.ccw.half",
  "leftrightarrow": "arrow.l.r",
  "restriction": "harpoon.tr",
  "curvearrowright": "arrow.cw.half",
  "Leftrightarrow": "arrow.l.r.double",
  "rightarrow": "arrow.r",
  "Darr": "arrow.b.double",
  "leftrightarrows": "arrows.lr",
  "Rightarrow": "arrow.r.double",
  "dArr": "arrow.b.double",
  "leftrightharpoons": "harpoons.ltrb",
  "rightarrowtail": "arrow.r.tail",
  "darr": "arrow.b",
  "leftrightsquigarrow": "arrow.l.r.wave",
  "rightharpoondown": "harpoon.rb",
  "dashleftarrow": "arrow.l.dashed",
  "Lleftarrow": "arrow.l.triple",
  "rightharpoonup": "harpoon.rt",
  "dashrightarrow": "arrow.r.dashed",
  "longleftarrow": "arrow.l.long",
  "rightleftarrows": "arrows.rl",
  "downarrow": "arrow.b",
  "Longleftarrow": "arrow.l.double.long",
  "rightleftharpoons": "harpoons.rtlb",
  "Downarrow": "arrow.b.double",
  "longleftrightarrow": "arrow.l.r.long",
  "rightrightarrows": "arrows.rr",
  "downdownarrows": "arrows.bb",
  "Longleftrightarrow": "arrow.l.r.double.long",
  "rightsquigarrow": "arrow.r.squiggly",
  "downharpoonleft": "harpoon.bl",
  "longmapsto": "arrow.r.long.bar",
  "Rrightarrow": "arrow.r.triple",
  "downharpoonright": "harpoon.br",
  "longrightarrow": "arrow.r.long",
  "gets": "arrow.l",
  "Longrightarrow": "arrow.r.double.long",
  "searrow": "arrow.br",
  "Harr": "arrow.l.r.double",
  "looparrowleft": "arrow.l.loop",
  "swarrow": "arrow.bl",
  "hArr": "arrow.l.r.double",
  "looparrowright": "arrow.r.loop",
  "to": "arrow.r",
  "harr": "arrow.l.r",
  "Lrarr": "arrow.l.r.double",
  "twoheadleftarrow": "arrow.l.twohead",
  "hookleftarrow": "arrow.l.hook",
  "lrArr": "arrow.l.r.double",
  "twoheadrightarrow": "arrow.r.twohead",
  "hookrightarrow": "arrow.r.hook",
  "lrarr": "arrow.l.r",
  "Uarr": "arrow.t.double",
  "iff": "arrow.l.r.double.long",
  "uArr": "arrow.t.double",
  "impliedby": "arrow.l.double.long",
  "mapsto": "arrow.r.bar",
  "uarr": "arrow.t",
  "implies": "arrow.r.double.long",
  "nearrow": "arrow.tr",
  "uparrow": "arrow.t",
  "Larr": "arrow.l.double",
  "nleftarrow": "arrow.l.not",
  "Uparrow": "arrow.t.double",
  "lArr": "arrow.l.double",
  "nLeftarrow": "arrow.l.double.not",
  "updownarrow": "arrow.t.b",
  "larr": "arrow.l",
  "nleftrightarrow": "arrow.l.r.not",
  "Updownarrow": "arrow.t.b.double",
  "leadsto": "arrow.r.squiggly",
  "nLeftrightarrow": "arrow.l.r.double.not",
  "upharpoonleft": "harpoon.tl",
  "leftarrow": "arrow.l",
  "nrightarrow": "arrow.r.not",
  "upharpoonright": "harpoon.tr",
  "Leftarrow": "arrow.l.double",
  "nRightarrow": "arrow.r.double.not",
  "upuparrows": "arrows.tt",
  "leftarrowtail": "arrow.l.tail",
  "nwarrow": "arrow.tl",
  "leftharpoondown": "harpoon.lb",
  "Rarr": "arrow.r.double",
  "pm": "plus.minus",
  "plusmn": "plus.minus",
  "times": "times",
  "ltimes": "times.l",
  "rtimes": "times.r",
  "div": "div",
  "ell": "ell",
  
  /* spaces */
  ",": "#h(0.166em)",
  "thinspace": "#h(0.166em)",
  ">": "#h(0.222em)",
  "medspace": "#h(0.222em)",
  ":": "#h(0.222em)",
  ";": "#h(0.277em)",
  "!": "#h(-0.166em)",
  "quad": "quad",
  "qquad": "#h(2em)",

  /* keep symbol */
  "(": "(", // "paren.l",
  ")": ")", // "paren.r",
  "[": "[", // "bracket.l",
  "]": "]", // "bracket.r",
  "{": "{", // "brace.l",
  "}": "}", // "brace.r",
  "%": "%", // "percent",
  
  "checkmark": "checkmark",
  "top": "top",
  "bot": "tack.t",
  "mho": "ohm.inv",
  "star": "star.op",
  "bigstar": "star.filled",
  "because": "because",
  "suchthat": "therefore",
  "Alpha": "Alpha",
  "Beta": "Beta",
  "Gamma": "Gamma",
  "Delta": "Delta",
  "Epsilon": "Epsilon",
  "Zeta": "Zeta",
  "Eta": "Eta",
  "Theta": "Theta",
  "Iota": "Iota",
  "Kappa": "Kappa",
  "Lambda": "Lambda",
  "Mu": "Mu",
  "Nu": "Nu",
  "Xi": "Xi",
  "Omicron": "Omicron",
  "Pi": "Pi",
  "Rho": "Rho",
  "Sigma": "Sigma",
  "Tau": "Tau",
  "Upsilon": "Upsilon",
  "Phi": "Phi",
  "Chi": "Chi",
  "Psi": "Psi",
  "Omega": "Omega",
  "alpha": "alpha",
  "beta": "beta",
  "gamma": "gamma",
  "delta": "delta",
  "epsilon": "epsilon.alt",
  "zeta": "zeta",
  "eta": "eta",
  "theta": "theta",
  "iota": "iota",
  "kappa": "kappa",
  "lambda": "lambda",
  "mu": "mu",
  "nu": "nu",
  "xi": "xi",
  "omicron": "omicron",
  "pi": "pi",
  "rho": "rho",
  "sigma": "sigma",
  "tau": "tau",
  "upsilon": "upsilon",
  "phi": "phi",
  "chi": "chi",
  "psi": "psi",
  "omega": "omega"
};

type FixedOptions = {
  useTheoremEnvExtensions: boolean, 
  useTexLikeExtensions: boolean, 
  useCombinatorialExtensions: boolean,
};

const theoremEnvExtensions = {};
const texLikeExtensions = {};
const combinatorialExtensions = {};

const createFixed = (options: FixedOptions): Fixed => {
  const fixed = stableFixed;
  options.useTheoremEnvExtensions && Object.assign(fixed, theoremEnvExtensions);
  options.useTexLikeExtensions && Object.assign(fixed, texLikeExtensions);
  options.useCombinatorialExtensions && Object.assign(fixed, combinatorialExtensions);
  return fixed;
};

const Fixed = createFixed({ 
  useTheoremEnvExtensions: true, 
  useTexLikeExtensions: true, 
  useCombinatorialExtensions: true, 
});

export default Fixed;
